{{- if or .Values.config.service.sessionApi.enabled .Values.config.sdk.rfid.chipVerification.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "docreader.migration" . }}
  labels: {{- include "docreader.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels: {{- include "docreader.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "docreader.serviceAccount" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: {{ include "docreader.migration" . }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - pipenv
            - run
            - python
            - src/main.py
            - migrate
          env:
            {{- include "docreader.envs" . | indent 10 }}
            {{- if and (not .Values.postgresql.enabled) .Values.config.service.database.connectionStringSecretName }}
            - name: SQL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ template "docreader.db.credentials.secret" . }}
                  key: SQL_CONNECTION_STRING
            {{- end }}
          volumeMounts:
            - name: docreader-config
              mountPath: /app/config.yaml
              subPath: config.yaml
              readOnly: true
          {{- if .Values.extraVolumeMounts }}
          {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      volumes:
        - name: docreader-config
          configMap:
            name: {{ include "docreader.config.name" . }}
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
{{- end }}
