apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "faceapi.fullname" . }}
  labels: {{- include "faceapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels: {{- include "faceapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels: {{- include "faceapi.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "faceapi.serviceAccount" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: faceapi
              containerPort: 41101
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/ping
              port: faceapi
              {{- if .Values.config.service.webServer.ssl.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/readiness
              port: faceapi
              {{- if .Values.config.service.webServer.ssl.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle: {{- toYaml . | nindent 12 }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- include "faceapi.envs" . | indent 10 }}
            {{- if and (eq .Values.config.service.storage.type "s3") .Values.config.service.storage.s3.awsCredentialsSecretName }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "faceapi.aws.credentials.secret" . }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "faceapi.aws.credentials.secret" . }}
                  key: AWS_SECRET_ACCESS_KEY
            {{- end }}
            {{- if and (eq .Values.config.service.storage.type "az") .Values.config.service.storage.az.connectionStringSecretName }}
            - name: AZURE_STORAGE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ template "faceapi.az.credentials.secret" . }}
                  key: AZURE_STORAGE_CONNECTION_STRING
            {{- end }}
            {{- if and (not .Values.postgresql.enabled) .Values.config.service.database.connectionStringSecretName }}
            - name: SQL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ template "faceapi.db.credentials.secret" . }}
                  key: SQL_CONNECTION_STRING
            {{- end }}
          volumeMounts:
            - name: faceapi-config
              mountPath: /app/config.yaml
              subPath: config.yaml
              readOnly: true
            {{- if .Values.licenseSecretName }}
            - name: license
              mountPath: /app/extBin/unix/regula.license
              subPath: regula.license
              readOnly: true
            {{- end }}
            {{- if .Values.config.service.webServer.ssl.certificatesSecretName }}
            - name: certificates
              mountPath: /app/certs
              readOnly: true
            {{- end }}
            {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.detectMatch.enabled .Values.config.service.detectMatch.results.persistence.enabled }}
            - name: detectmatch-results
              mountPath: {{ quote .Values.config.service.detectMatch.results.location.folder }}
            {{- end }}
            {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.liveness.enabled .Values.config.service.liveness.sessions.persistence.enabled }}
            - name: liveness-sessions
              mountPath: {{ quote .Values.config.service.liveness.sessions.location.folder }}
            {{- end }}
            {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.search.enabled .Values.config.service.search.persons.persistence.enabled }}
            - name: search-persons
              mountPath: {{ quote .Values.config.service.search.persons.location.folder }}
            {{- end }}
            {{- if and (eq .Values.config.service.storage.type "gcs") .Values.config.service.storage.gcs.gcsKeyJsonSecretName }}
            - name: gcs-credentials
              mountPath: /etc/credentials/gcs_key.json
              subPath: gcs_key.json
              readOnly: true
            {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
      volumes:
        - name: faceapi-config
          configMap:
            name: {{ include "faceapi.config.name" . }}
        {{- if .Values.licenseSecretName }}
        - name: license
          secret:
            secretName: {{ template "faceapi.license.secret" . }}
        {{- end }}
        {{- if .Values.config.service.webServer.ssl.certificatesSecretName }}
        - name: certificates
          secret:
            secretName: {{ template "faceapi.certificates.secret" . }}
        {{- end }}
        {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.detectMatch.enabled .Values.config.service.detectMatch.results.persistence.enabled }}
        - name: detectmatch-results
          persistentVolumeClaim:
            claimName: {{ template "faceapi.detectmatch.results.pvc" . }}
        {{- end }}
        {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.liveness.enabled .Values.config.service.liveness.sessions.persistence.enabled }}
        - name: liveness-sessions
          persistentVolumeClaim:
            claimName: {{ template "faceapi.liveness.sessions.pvc" . }}
        {{- end }}
        {{- if and (eq .Values.config.service.storage.type "fs") .Values.config.service.search.enabled .Values.config.service.search.persons.persistence.enabled }}
        - name: search-persons
          persistentVolumeClaim:
            claimName: {{ template "faceapi.search.persons.pvc" . }}
        {{- end }}
        {{- if and (eq .Values.config.service.storage.type "gcs") .Values.config.service.storage.gcs.gcsKeyJsonSecretName }}
        - name: gcs-credentials
          secret:
            secretName: {{ template "faceapi.gcs.credentials.secret" . }}
        {{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
